/**
 * Display the outputs from the line sensors on the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>. This program spends the
 * first 10 seconds in calibration mode, during which you should move the robot over the light and
 * dark areas that you would like it to detect. It then switches into measurement mode and displays
 * the measured reflectance of the five IR sensors.
 *
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */
target uC;

import Line from "lib/Line.lf"
import Display from "lib/Display.lf"

main reactor {
  line = new Line()
  disp = new Display()

  timer t(0, 100 msec)
  timer seconds(0, 1 s)  // Timer used to display seconds.
  timer end_calibration(10 s)
  state count: int = 0

  reaction(startup) -> disp.line0, disp.line1, disp.line2 {=
    lf_set(disp.line0, "CALIBRATING");
    lf_set(disp.line1, "Roll robot over");
    lf_set(disp.line2, "light and dark.");
  =}

  reaction(seconds) -> disp.line3 {=
    DisplayString buf;
    snprintf(buf.text, 17, "time:%8d s", self->count++);
    lf_set(disp.line3, buf);
  =}

  reaction(end_calibration) -> line.calibrate {=
    lf_set(line.calibrate, false);
  =}

  reaction(t) -> line.trigger {=
    lf_set(line.trigger, true);
  =}

  reaction(line.reflect) -> disp.line0, disp.line1, disp.line2 {=
    DisplayString buf0;
    DisplayString buf1;
    DisplayString buf2;
    snprintf(buf0.text, 17, "0:%4d 1:%4d", line.reflect->value.value[0], line.reflect->value.value[1]);
    snprintf(buf1.text, 17, "2:%4d 3:%4d", line.reflect->value.value[2], line.reflect->value.value[3]);
    snprintf(buf2.text, 17, "4:%4d", line.reflect->value.value[4]);
    lf_set(disp.line0, buf0);
    lf_set(disp.line1, buf1);
    lf_set(disp.line2, buf2);
  =}
}
